name: Deploy Azure Web App

on:
  workflow_run:
    workflows: ["Build and Publish to Azure Container Registry"]
    types:
      - completed
    branches:
      - main

env:
  AZURE_REGISTRY: arturzure.azurecr.io
  IMAGE_NAME: azurewebapp2
  AZURE_WEBAPP_NAME: ap-awareson-dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v2
      with:
        login-server: ${{ env.AZURE_REGISTRY }}
        username: ${{ secrets.AZURE_CLIENT_ID }}
        password: ${{ secrets.AZURE_CLIENT_SECRET }}
        
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        images: ${{ env.AZURE_REGISTRY }}/${{ env.IMAGE_NAME }}:main
        
    - name: Wait for deployment
      run: |
        echo "Waiting for deployment to complete..."
        sleep 60
        
    outputs:
      webapp-url: ${{ steps.deploy.outputs.webapp-url }}

  test:
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ needs.deploy.result == 'success' }}
    
    steps:
    - name: Wait for application startup
      run: |
        echo "Waiting for application to start..."
        sleep 30
        
    - name: Test Check Page Status
      run: |
        WEBAPP_URL="https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
        CHECK_URL="$WEBAPP_URL/Check"
        
        echo "Testing Check page endpoint: $CHECK_URL"
        
        # Wait for application to be ready and get response
        for i in {1..3}; do
          # Get HTTP status code and response body
          HTTP_STATUS=$(curl -s -o response.txt -w "%{http_code}" "$CHECK_URL" 2>/dev/null || echo "000")
          RESPONSE_BODY=$(cat response.txt 2>/dev/null || echo "")
          
          if [ "$HTTP_STATUS" != "000" ]; then
            echo "Check page is responding"
            echo "HTTP Status: $HTTP_STATUS"
            echo "Response: $RESPONSE_BODY"
            
            # Check HTTP status code for success/failure
            if [ "$HTTP_STATUS" = "200" ]; then
              echo "Check page returned HTTP 200 - Database connection successful - Stage: GREEN"
              exit 0
            elif [ "$HTTP_STATUS" = "400" ]; then
              echo "Check page returned HTTP 400 - Database is unreachable - Stage: RED"
              exit 1
            else
              echo "Check page returned unexpected HTTP status: $HTTP_STATUS"
              exit 1
            fi
          else
            echo "‚è≥ Attempt $i: Check page not responding, waiting 30 seconds..."
            if [ $i -eq 3 ]; then
              echo "Check page connection failed after 3 attempts - Stage: RED"
              exit 1
            fi
            sleep 30
          fi
        done
        
    - name: Deployment Summary
      if: always()
      run: |
        echo "Deployment Summary:"
        echo "- Web App: ${{ env.AZURE_WEBAPP_NAME }}"
        echo "- Image: ${{ env.AZURE_REGISTRY }}/${{ env.IMAGE_NAME }}:main"
        echo "- URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
        echo "- Check Page: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/Check"
        echo "- Test Status: ${{ job.status }}"
